fetch('https://jsonplaceholder.typicode.com/posts/1')
 .then(response => response.json())
 .then(json => console.log(json))
 .catch(error => console.error('Error fetching data:', error));

 fetch('https://jsonplaceholder.typicode.com/users')
 .then(response => response.json())
 .then(users => {
 const userList = document.getElementById('userList');
 users.forEach(user => {
 const li = document.createElement('li');
 li.textContent = user.name;
 userList.appendChild(li);
 });
 })
 .catch(error => console.error('Error loading user data:', error));

 fetch('https://jsonplaceholder.typicode.com/posts/2')
 .then(response => {
 if (!response.ok) {
 throw new Error('Network response was not ok ' + response.statusText);
 }
 return response.json();
 })
 .then(json => console.log(json))
 .catch(error => console.error('Failed to fetch:', error));

 fetch('https://jsonplaceholder.typicode.com/posts', {
 method: 'POST',
 headers: {
 'Content-Type': 'application/json'
 },
 body: JSON.stringify({
 title: 'foo',
 body: 'bar',
 userId: 1
 })
})
.then(response => response.json())
.then(json => console.log('Post created:', json))
.catch(error => console.error('Error posting data:', error));

async function fetchPost() {
    try {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts/3');
    if (!response.ok) {
    throw new Error('Failed to fetch: ' + response.statusText);
    }
    const post = await response.json();
    console.log(post);
    } catch (error) {
    console.error(error);
    }
   }
   fetchPost();
   
